{"version":3,"file":"assets/js/main.8de38e9e64452c796539.js","mappings":";sKAGe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACE,oDACA,0BAAQC,KAAK,SAASC,QAAS,kBAAMH,EAAS,WAAW,GAAC,iBAKhE,CCZe,SAASI,EAAY,GAAiB,IACnCC,EADoBC,EAAW,EAAXA,YAMpC,OAAKA,EAAYC,MAGf,uBAAKC,UAAU,kBACb,uBAAKA,UAAU,YACb,uBAAKC,IAAG,2CAAsCH,EAAYI,QAAQ,GAAGC,KAAI,WAAWC,IAAI,gBACxF,0BACGN,EAAYO,KAAKC,KACjB,IAAG,OAIR,uBAAKN,UAAU,QACb,uCAEGF,EAAYS,MAEf,qCACA,mCAvBUV,EAyBAC,EAAYD,GAxBb,IAAIW,KAAKX,GACVY,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,cAyB/D,yCAEGb,EAAYI,QAAQ,GAAGU,eAxBD,uCA6BjC,oPCpCA,8lGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4YAAAA,GAAA,gEAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,4SAAAA,IAAA,2OAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAGe,SAASC,IACtB,IAAMtB,GAAWC,EAAAA,EAAAA,MAEgB,KAAXsB,EAAAA,EAAAA,UAAS,GAAE,GAA1BC,EAAG,KAAEC,EAAM,KACiB,KAAXF,EAAAA,EAAAA,UAAS,GAAE,GAA5BG,EAAI,KAAEC,EAAO,KACgB,KAAZJ,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAA7BK,EAAI,KAAEC,EAAO,KAqBpB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAXnB,EAWmB,GAXnB,EAWmB,UAAG,8EAIb,OAHHC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCV,EAAOU,EAASC,OAAOC,UACvBV,EAAQQ,EAASC,OAAOE,UAC1B,IAAG,SAEGC,MAAM,wDAAD,OAC+Cf,EAAG,gBAAQE,EAAI,yDAEtEc,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GACLZ,EAAQY,EACV,IAAE,0CAvBV,+KAwBK,kBAbc,mCAefV,GACF,GAAG,CAACP,EAAKE,IAGP,uBAAKlB,UAAU,kBACb,gBAACJ,EAAW,CAACE,YAAasB,IAC1B,0BAAQ1B,KAAK,SAASC,QAAS,kBAAMH,EAAS,WAAW,GAAC,WAKhE,CCnCe,SAAS2C,IACtB,OAAO,gBAAC,KAAM,KAChB,CCqBA,SApBeC,UAAAA,IAAoB,CACjC,CACEC,QAAS,gBAACF,EAAS,MACnBG,SAAU,CACR,CACEC,KAAM,IACNF,QAAS,gBAAC,KAAQ,CAACG,GAAG,cAExB,CACED,KAAM,WACNF,QAAS,gBAAC9C,EAAO,OAEnB,CACEgD,KAAM,WACNF,QAAS,gBAACvB,EAAO,WCNzB,QATA,WACE,OACE,uBAAKd,UAAU,OACb,kCACA,gBAAC,KAAc,CAACyC,OAAQA,IAG9B,ECHaC,EAAAA,WAAoBC,SAASC,eAAe,SACpDC,OAAO,gBAAC,EAAG","sources":["webpack://webpack-boilerplate-mirza/./src/views/Welcome.jsx","webpack://webpack-boilerplate-mirza/./src/components/WeatherCard.jsx","webpack://webpack-boilerplate-mirza/./src/views/Weather.jsx","webpack://webpack-boilerplate-mirza/./src/views/MainRoute.jsx","webpack://webpack-boilerplate-mirza/./src/router/index.jsx","webpack://webpack-boilerplate-mirza/./src/App.jsx","webpack://webpack-boilerplate-mirza/./src/index.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Welcome() {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <h1>Welcome To Weather App</h1>\n      <button type=\"button\" onClick={() => navigate('/weather')}>\n        Check Weather\n      </button>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function WeatherCard({ weatherData }) {\n  const toDate = (dt) => {\n    const date = new Date(dt);\n    return date.toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' });\n  };\n\n  if (!weatherData.coord) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-img\">\n        <img src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} alt=\"weather-img\" />\n        <h2>\n          {weatherData.main.temp}\n          {' '}\n          Â°C\n        </h2>\n      </div>\n      <div className=\"card\">\n        <h2>\n          Weather at\n          {weatherData.name}\n        </h2>\n        <h3>Details</h3>\n        <p>\n          Time :\n          {toDate(weatherData.dt)}\n        </p>\n        <p>\n          Description :\n          {weatherData.weather[0].description}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport WeatherCard from '../components/WeatherCard';\n\nexport default function Weather() {\n  const navigate = useNavigate();\n\n  const [lat, setLat] = useState(0);\n  const [long, setLong] = useState(0);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(\n        `https://api.openweathermap.org/data/2.5/weather/?lat=${lat}&lon=${long}&units=metric&APPID=8b4a1cfe7b37f251dcce8b232975fd6d`,\n      )\n        .then((res) => res.json())\n        .then((res) => {\n          setData(res);\n        });\n    };\n\n    fetchData();\n  }, [lat, long]);\n\n  return (\n    <div className=\"list-container\">\n      <WeatherCard weatherData={data} />\n      <button type=\"button\" onClick={() => navigate('/welcome')}>\n        Go Back\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nexport default function MainRoute() {\n  return <Outlet />;\n}\n","import React from 'react';\nimport { createBrowserRouter, Navigate } from 'react-router-dom';\nimport Welcome from '../views/Welcome';\nimport Weather from '../views/Weather';\nimport MainRoute from '../views/MainRoute';\n\nconst router = createBrowserRouter([\n  {\n    element: <MainRoute />,\n    children: [\n      {\n        path: '/',\n        element: <Navigate to=\"/welcome\" />,\n      },\n      {\n        path: '/welcome',\n        element: <Welcome />,\n      },\n      {\n        path: '/weather',\n        element: <Weather />,\n      },\n    ],\n  },\n]);\n\nexport default router;\n","import React from 'react';\nimport './App.scss';\nimport { RouterProvider } from 'react-router-dom';\nimport router from './router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Test</h1>\n      <RouterProvider router={router} />\n    </div>\n  );\n}\n\nexport default App;\n","// eslint-disable-next-line import/no-unresolved\n// import 'file-loader?name=[name].[ext]!./index.html';\n// import 'regenerator-runtime';\n// import 'babel-polyfill';\n// import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"names":["Welcome","navigate","useNavigate","type","onClick","WeatherCard","dt","weatherData","coord","className","src","weather","icon","alt","main","temp","name","Date","toLocaleTimeString","hour","minute","description","i","Weather","useState","lat","setLat","long","setLong","data","setData","useEffect","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","MainRoute","createBrowserRouter","element","children","path","to","router","ReactDOM","document","getElementById","render"],"sourceRoot":""}